
# common data
shape_meta:
  action:
    shape:
    - 21
  obs:
    lowdim_obs:
      shape:
      - 35
      type: low_dim
    image:
      shape:
      - 3
      - 192
      - 192
      type: rgb
    image2:
      shape:
      - 3
      - 192
      - 192
      type: rgb

policy:
  n_obs_steps: 1
  horizon: 16
  state_length: {shape_meta.obs.lowdim_obs.shape}

common_dataset:
  _target_: diffusion_policy.dataset.dexnex_2cams_image_ql_dataset.DexNexDataset
  n_obs_steps : ${policy.n_obs_steps}
  horizon : ${policy.horizon}
  state_length : ${policy.state_length}
  pad_after: 7 # afaik these are w.r.t. beginning's and ends of episodes
  pad_before: 1 # afaik these are w.r.t. beginning's and ends of episodes
  seed: 42
  val_ratio: 0.02
  history_indices: [15, 10, 5] # 0.5s skip, with 0.1s dt, get state from 1.5s, 1.0s, and 0.5s ago
  max_train_episodes: null
  shape_meta: ${shape_meta}
  
common_wbatch_loss:
  block_transfer:
    _target_: diffusion_policy.losses.batch_loss.WeightedBatchLoss

    # children
    batch_loss:
      _target_: diffusion_policy.losses.batch_loss.BatchLoss

      # children
      batch_loader:
        _target_: diffusion_policy.dataset.batch_loader.BatchLoader

        # children
        dataset: 
          {common_dataset}

data_directory: /media/dexnex_ssd/data/bnb/


# training entry point
session_trainer:
  _target_: diffusion_policy.trainers.session_trainer.SessionTrainer
  nb_epochs: 1000
  
  # children
  epoch_trainer:
    _target_: diffusion_policy.trainers.epoch_trainer.EpochTrainer

    # children
    step_trainer: 
      _target_: diffusion_policy.trainers.step_trainer.StepTrainer

      # weighted batch loss dict
      w_batch_losses:
        block_transfer: {common_wbatch_loss}
        block_transfer.weight: 0.25
        block_transfer.batch_loss.batch_loader.dataset.zarr_path: {data_directory}bt.reward.zarr

        bnb_1cam: {common_wbatch_loss}
        bnb_1cam.weight: 0.25
        bnb_1cam.batch_loss.batch_loader.dataset.zarr_path: {data_directory}1cam.reward.zarr

        bnb_2cam: {common_wbatch_loss}
        bnb_2cam.weight: 0.5
        bnb_2cam.batch_loss.batch_loader.dataset.zarr_path: {data_directory}2cam.reward.zarr